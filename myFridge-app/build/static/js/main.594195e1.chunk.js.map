{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","onClick","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","App","Container","style","minHeight","maxWidth","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.594195e1.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\nimport \"firebase/auth\"\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n})\n\nexport const auth = app.auth()\nexport default app\n","import React, { useContext, useState, useEffect } from 'react'\nimport { auth } from '../firebase'\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\n\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState()\n    const [loading, setLoading] = useState(true)\n\n    function signup(email, password) {\n        return auth.createUserWithEmailAndPassword(email, password)\n    }\n    \n    function login(email, password) {\n        return auth.signInWithEmailAndPassword(email, password)\n    }\n\n    function logout(){\n        return auth.signOut()\n    }\n\n    function resetPassword(email) {\n        return auth.sendPasswordResetEmail(email)\n    }\n\n    function updateEmail(email) {\n        return currentUser.updateEmail(email)\n    }\n\n    function updatePassword(password) {\n        return currentUser.updatePassword(password)\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n            setLoading(false)\n            \n        })\n\n        return unsubscribe\n    }, [])    \n\n    const value = {\n        currentUser,\n        login,\n        signup,\n        logout,\n        resetPassword,\n        updateEmail,\n        updatePassword\n    }\n    \n    return( \n        <AuthContext.Provider value={value}> \n            {!loading && children} \n        </AuthContext.Provider>   \n    )\n\n}\n","import React, { useRef, useState } from 'react'\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\nimport { useAuth, } from '../contexts/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\n\nexport default function Signup() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const { signup } = useAuth()\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n            return setError ('Passwords do not match')\n        }\n\n        try {\n            setError('')\n            setLoading(true)\n            await signup(emailRef.current.value, passwordRef.current.value)\n            history.push('/')\n        }\n\n        catch {\n            setError('Failed to create account')\n        }\n\n        setLoading(false)\n        \n    }\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" ref={emailRef} required />\n                        </Form.Group>\n\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"Password\" ref={passwordRef} required />\n                        </Form.Group>\n\n                        <Form.Group id=\"password-confirm\">\n                            <Form.Label>Password Confirmation</Form.Label>\n                            <Form.Control type=\"Password\" ref={passwordConfirmRef} required />\n                        </Form.Group>\n\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                            Sign Up\n                        </Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                Already have an account? <Link to=\"/login\"> Log In </Link>\n            </div>\n        </>\n    )\n}\n","import React, { useState } from \"react\"\nimport { Card, Button, Alert } from 'react-bootstrap'\nimport { useAuth } from '../contexts/AuthContext'\nimport { Link, useHistory } from \"react-router-dom\"\n\n\nexport default function Dashboard() {\n    const [error, setError] = useState(\"\")\n    const { currentUser, logout } = useAuth()\n    const history = useHistory()\n\n    async function handleLogout() {\n        setError('')\n\n        try{\n            await logout()\n            history.push('/login')\n        } \n        catch{\n            setError('Failed to log out')\n        }\n    }\n\n    return(\n        <>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Profile</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <strong>Email: </strong> {currentUser.email}\n                    <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">Update Profile</Link>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                <Button variant=\"link\" onClick={handleLogout}> \n                    Log Out\n                </Button>\n            </div>\n        </>\n    )\n}\n\n","import React, { useRef, useState } from 'react'\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext'\n\nexport default function Login() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const { login } = useAuth()\n    const [error, setError] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n    const [message, setMessage] = useState(\"\")\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n      \n\n        try {\n            setError(\"\")\n            setLoading(true)\n            await login(emailRef.current.value, passwordRef.current.value)\n            history.push(\"/\")\n        }\n\n        catch {\n            setError('Failed to log in')\n        }\n\n        setLoading(false)\n        \n    }\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Log In</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    \n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" ref={emailRef} required />\n                        </Form.Group>\n\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"Password\" ref={passwordRef} required />\n                        </Form.Group>\n\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                            Log In\n                        </Button>\n                    </Form>\n                    <div className=\"w-100 text-center mt-3\">\n                        <Link to=\"/forgot-password\">Forgot password</Link>\n                    </div>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                Don't have account? <Link to=\"/signup\"> Register </Link>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext'\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n\n    const { currentUser } = useAuth()\n\n    return (\n        <Route {...rest} render={props => {\n            return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\n            }}>   \n        </Route>\n    )\n}\n","import React, { useRef, useState } from 'react'\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\nimport { Link, } from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext'\n\nexport default function ForgotPassword() {\n    const emailRef = useRef()\n    const { resetPassword } = useAuth()\n    const [error, setError] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n      \n\n        try {\n            setMessage('')\n            setError(\"\")\n            setLoading(true)\n            await resetPassword(emailRef.current.value)\n            setMessage('Check your inbox for further instructions')\n        }\n\n        catch {\n            setError('Failed to reset password')\n        }\n\n        setLoading(false)\n        \n    }\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Reset Password</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    {message && <Alert variant=\"success\">{message}</Alert>}\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" ref={emailRef} required />\n                        </Form.Group>\n\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                            Reset Password\n                        </Button>\n                    </Form>\n                    <div className=\"w-100 text-center mt-3\">\n                        <Link to=\"/login\">Login</Link>\n                    </div>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                Don't have account? <Link to=\"/signup\"> Register </Link>\n            </div>\n        </>\n    )\n}\n","import React, { useRef, useState } from 'react'\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\nimport { useAuth, } from '../contexts/AuthContext'\nimport { Link, useHistory } from 'react-router-dom'\n\nexport default function UpdateProfile() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const { currentUser, updatePassword, updateEmail } = useAuth()\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n\n    function handleSubmit(e) {\n        e.preventDefault()\n\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n            return setError ('Passwords do not match')\n        }\n\n        const promises = []\n        setError('')\n        setLoading(true)\n\n        if (emailRef.current.value !== currentUser.email) {\n            promises.push(updateEmail(emailRef.current.value))\n        }\n        if (passwordRef.current.value) {\n            promises.push(updatePassword(passwordRef.current.value))\n        }\n\n        Promise.all(promises).then(() => {\n            history.push('/')\n        }).catch(() => {\n            setError('Failed to update account')\n        }).finally(() =>{\n            setLoading(false)\n        })\n    }\n\n    return (\n        <>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Update Profile</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email} />\n                        </Form.Group>\n\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"Password\" ref={passwordRef} placeholder=\"leave blank to keep the same\" />\n                        </Form.Group>\n\n                        <Form.Group id=\"password-confirm\">\n                            <Form.Label>Password Confirmation</Form.Label>\n                            <Form.Control type=\"Password\" ref={passwordConfirmRef} placeholder=\"leave blank to keep the same\" />\n                        </Form.Group>\n\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                            Update\n                        </Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                <Link to=\"/\"> Cancel </Link>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport Signup from \"./Signup\";\nimport { Container } from 'react-bootstrap'\nimport { AuthProvider } from '../contexts/AuthContext';\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\nimport Dashboard from \"./Dashboard\"\nimport Login from \"./Login\"\nimport PrivateRoute from './PrivateRoute'\nimport ForgotPassword from './ForgotPassword'\nimport UpdateProfile from './UpdateProfile';\n\nfunction App() {\n  return (  \n    <Container className=\"d-flex align-items-center justify-content-center\" style={{minHeight: \"100vh\" }}>       {/* loads up Signup code inside container*/}\n      <dif className=\"w-100\" style={{ maxWidth: \"450px\"}}>\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Dashboard} />\n              <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/forgot-password\" component={ForgotPassword} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </dif>\n    </Container>\n  )  \n}\n\nexport default App;\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}